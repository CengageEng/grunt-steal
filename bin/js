#!/bin/sh
# This script checks for arguments, if they don't exist it opens the Rhino dialog
# if arguments do exist, it loads the script in the first argument and passes the other arguments to the script
# ie: ./js steal/script/controller Todo

printf "##### Running command $0\n"
printf "##### Getting dirname = $(dirname $0)\n"
printf "##### Getting basename = $(basename $0)\n"
printf "##### Getting PWD = $PWD\n"
printf "##### Getting dirname -a = $(dirname $0 -a)\n"
printf "##### Getting basename -a = $(basename $0 -a)\n"
printf "##### Getting dirname -s = $(dirname $0 -s)\n"
printf "##### Getting basename -s = $(basename $0 -s)\n"

CP="$(/usr/bin/dirname $0)/../rhino/js.jar"

printf "##### Classpath $CP\n"

exit 0

ERRORLEV=0
if [ $1 = "-e" ]
then
	echo 'ERROR REPORTING ACTIVATED'
	ERRORLEV=1
	shift
fi

ARGS=[
for arg
do
  if [ $arg != $1 ]
  then
    ARGS=$ARGS"'$arg'",
  fi
done
ARGS=$ARGS]
echo java -Xmx1024m -Xss2048k -cp $CP org.mozilla.javascript.tools.shell.Main -e _args=$ARGS -opt -1 -e 'load('"'"$1"'"')'
java -Xmx1024m -Xss2048k -cp $CP org.mozilla.javascript.tools.shell.Main -e _args=$ARGS -opt -1 -e 'load('"'"$1"'"')'
ret=$?
if [ "$ERRORLEV" = "1" -o "$ret" -ne "0" ]
then
	exit $ret
fi
